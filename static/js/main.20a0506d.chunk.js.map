{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["card","props","id","name","email","className","src","alt","cardList","robots","map","robot","Card","searchBox","type","placeholder","onChange","filter","scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","searchfield","onSearchChange","event","target","value","fetch","then","response","json","users","filtered","toLocaleLowerCase","includes","length","SearchBox","Scroll","CardList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAACC,GACV,IAAOC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACjB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,WACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCILI,EAVE,SAACP,GAChB,OACE,8BACGA,EAAMQ,OAAOC,KAAI,SAACC,GACjB,OAAO,cAACC,EAAD,CAAqBV,GAAIS,EAAMT,GAAIC,KAAMQ,EAAMR,KAAMC,MAAOO,EAAMP,OAAvDO,EAAMT,UCQjBW,EAbG,SAACZ,GACjB,OACE,qBAAKI,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVS,KAAK,SACLC,YAAY,gBACZC,SAAUf,EAAMgB,YCCTC,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKrB,EAAMsB,YCiBJC,E,kDAnBb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,uDAEFG,KAAK5B,MAAMsB,a,GAhBKQ,aC2CZC,G,kNArCbP,MAAQ,CACNhB,OAAQ,GACRwB,YAAa,I,EAGfC,eAAiB,SAACC,GAChB,EAAKL,SAAS,CAAEG,YAAaE,EAAMC,OAAOC,S,uDAG5C,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAG7C,WACE,MAAgCb,KAAKJ,MAA7BhB,EAAR,EAAQA,OAAQwB,EAAhB,EAAgBA,YACVU,EAAWlC,EAAOQ,QAAO,SAACN,GAAD,OAC7BA,EAAMR,KAAKyC,oBAAoBC,SAASZ,EAAYW,wBAGtD,OAAQnC,EAAOqC,OAGb,sBAAKzC,UAAU,KAAf,UACE,6CACA,cAAC0C,EAAD,CAAW9B,OAAQY,KAAKK,iBACxB,cAACc,EAAD,UACE,cAAC,EAAD,UACE,cAACC,EAAD,CAAUxC,OAAQkC,WAPxB,+C,GAvBYZ,cCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.20a0506d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst card = (props) => {\r\n    const {id, name, email } = props;\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"Robots\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst cardList = (props) => {\r\n  return (\r\n    <div>\r\n      {props.robots.map((robot) => {\r\n        return <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default cardList;\r\n","import React from \"react\";\r\n\r\nconst searchBox = (props) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={props.filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default searchBox;\r\n","import React from 'react';\r\n\r\nconst scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '700px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Opps. Tht is not good</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    robots: [],\r\n    searchfield: \"\",\r\n  };\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filtered = robots.filter((robot) =>\r\n      robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\r\n    );\r\n\r\n    return !robots.length ? (\r\n      <h1>Loading..</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1>RoboFriends</h1>\r\n        <SearchBox filter={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            <CardList robots={filtered} />\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from './containers/App';\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}